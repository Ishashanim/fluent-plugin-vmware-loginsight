# Fluentd plugin for VMware Log Insight
# 
# Copyright 2018 VMware, Inc. All Rights Reserved. 
# 
# This product is licensed to you under the MIT license (the "License").  You may not use this product except in compliance with the MIT License.  
# 
# This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file. 
# 
# SPDX-License-Identifier: MIT


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-system
data:
  fluent.conf: |
    # We can use this config to load some default config or load user defined config
    @include myapp-fluent.conf

  myapp-fluent.conf: |
    # Input sources
    @include general.conf
    @include systemd-input.conf
    @include kubernetes-input.conf

    # Parsing/Filtering
    @include kubernetes-filter.conf

    # Forwading - Be vigilant of the order in which these plugins are specified. Order matters!
    @include myapp-loginsight-output.conf

  general.conf: |
    <system>
      log_level info
    </system>
    # Prevent fluentd from handling records containing its own logs to handle cycles.
    <match fluent.**>
      @type null
    </match>

  systemd-input.conf: |
    <source>
      @type systemd
      path /run/log/journal
      # Can filter logs if we want, e.g.
      # filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/fluentd-systemdlog.pos
      </storage>
      tag systemdlog
      read_from_head true
      strip_underscores true
    </source>

  kubernetes-input.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      # One could exclude certain logs like:
      # exclude_path ["/var/log/containers/log-collector*.log"]
      pos_file /var/log/fluentd-docker.pos
      time_format %Y-%m-%dT%H:%M:%S
      tag kubernetes.*
      format json
      read_from_head true
    </source>

  kubernetes-filter.conf: |
    <filter kubernetes.**>
      @type kubernetes_metadata
      merge_json_log true
      preserve_json_log true
    </filter>

  myapp-loginsight-output.conf: |
    # We are capturing all log messages and redirecting them to endpoints mentioned in each <store> tag.
    # One may redirect these logs to muliple endpoints (including multiple LI instances).
    # Or one may chose to tag their specific logs and add their own config to capture those tagged logs and redirect
    # them to appropriate endpoint. This specific config needs to preceed this generic one.
    <match **>
      @type copy
      <store>
        @type vmware_loginsight
        scheme https
        ssl_verify true
        # Loginsight host: One may use IP address or cname
        # host X.X.X.X
        host my-loginsight.mycompany.com
        port 9000
        path api/v1/events/ingest
        agent_id XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
        http_method post
        serializer json
        rate_limit_msec 0
        raise_on_error false
        include_tag_key true
        tag_key tag
      </store>
      # If we want to debug and send logs to stdout as well
      # <store>
      #   @type stdout
      # </store>
    </match>


  extra.conf: |
    # If we want to transform events we could use:
    #<filter **>
    #  @type record_transformer
    #  enable_ruby
    #  auto_typecast
    #  <record>
    #    hostname "#{Socket.gethostname}"
    #    mykey ${["message"=>record.to_json]}
    #  </record>
    #</filter>


---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: "log-collector"
  namespace: "kube-system"
  labels:
    app: "log-collector"
    version: v1
spec:
  template:
    metadata:
      labels:
        app: "log-collector"
        version: v1
    spec:
      containers:
        - name: "log-collector"
          image: "my-container-hub.com/log-collector:1.0.0"
          command: ["fluentd", "-c", "/fluentd/etc/fluent.conf", "-p", "/fluentd/plugins"]
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: runlogjournal
              mountPath: /run/log/journal
            - name: fluentdconfig
              mountPath: /fluentd/etc
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: runlogjournal
          hostPath:
            path: /run/log/journal
        - name: fluentdconfig
          configMap:
            name: "fluentd-config"
